plugins {
    id 'java'  // Java 플러그인
    id 'org.springframework.boot' version '3.3.1'  // Spring Boot 플러그인
    id 'io.spring.dependency-management' version '1.1.5'  // Spring Dependency Management 플러그인
}

group = 'com.took'  // 프로젝트 그룹
version = '0.0.1-SNAPSHOT'  // 프로젝트 버전

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)  // Java 언어 버전 설정
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor  // compileOnly 구성에서 annotationProcessor 의존성 상속
    }
}

repositories {
    mavenCentral()  // Maven 중앙 저장소 사용
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  // Spring Boot JPA 스타터 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'  // Spring Boot Redis 스타터 의존성
    implementation 'org.springframework.boot:spring-boot-starter-web'  // Spring Boot 웹 스타터 의존성
    runtimeOnly 'com.mysql:mysql-connector-j'  // MySQL 커넥터 의존성 추가 (실행 시에만 사용)
    compileOnly 'org.projectlombok:lombok'  // Lombok 컴파일 타임 의존성
    developmentOnly 'org.springframework.boot:spring-boot-devtools'  // Spring Boot 개발 도구 의존성 (개발 시에만 사용)
    annotationProcessor 'org.projectlombok:lombok'  // Lombok 어노테이션 프로세서 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'  // Spring Boot 테스트 스타터 의존성
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'  // JUnit 플랫폼 런처 의존성 (테스트 실행 시에만 사용)
    implementation 'org.springframework.boot:spring-boot-starter-websocket'  // Spring WebSocket 의존성 추가
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0' // Swagger 의존성 추가
    implementation 'commons-codec:commons-codec:1.15'  // Apache Commons Codec 의존성 추가
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6' // 쿼리 로그 출력 시 인자값을 보여주는 라이브러리 추가
    implementation 'org.springframework.boot:spring-boot-starter-validation' // Spring Boot의 유효성 검증 기능을 위한 의존성 추가
    implementation 'javax.annotation:javax.annotation-api:1.3.2'  // Java 어노테이션 API 의존성 추가

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'  // QueryDSL JPA 모듈 추가 (Jakarta 버전)
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"  // QueryDSL APT 설정 (Jakarta 버전)
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"  // Jakarta 어노테이션 API 추가
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"  // Jakarta Persistence API 추가

    // 추가된 의존성
    implementation 'org.springframework.boot:spring-boot-starter-mail'  // Spring Boot 메일 스타터 의존성
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'  // Spring Boot OAuth2 클라이언트 스타터 의존성
    implementation 'org.springframework.boot:spring-boot-starter-security'  // Spring Boot 보안 스타터 의존성
    implementation group: 'io.jsonwebtoken', name:'jjwt-api',version: '0.11.2'  // JJWT API 의존성
    implementation group: 'io.jsonwebtoken', name:'jjwt-impl',version: '0.11.2'  // JJWT 구현 의존성
    implementation group: 'io.jsonwebtoken', name:'jjwt-jackson',version: '0.11.2'  // JJWT Jackson 의존성
    testImplementation 'org.springframework.security:spring-security-test'  // Spring Security 테스트 의존성
    implementation 'com.google.firebase:firebase-admin:7.1.1' // fcm
}

clean {
    delete file('src/main/generated')  // gradle clean 시에 QClass 디렉토리 삭제
}

tasks.named('test') {
    useJUnitPlatform()  // JUnit 플랫폼을 사용하여 테스트 실행
}
